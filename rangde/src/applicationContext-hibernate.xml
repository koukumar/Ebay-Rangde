<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN" "http://www.springframework.org/dtd/spring-beans.dtd">
<beans>

    <!-- ========================= RESOURCE DEFINITIONS ========================= -->

    <!-- Configurer that replaces ${...} placeholders with values from a properties file -->
    <!-- (in this case, JDBC-related settings for the dataSource definition below) -->
    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="location" value="/WEB-INF/jdbc.properties"/>
    </bean>
    
    <bean id="NRIPassUp" class="org.rangde.service.NRIPassportUploadService">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	
	<bean id="NRIPassUpService" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
	     <property name="transactionManager" ref="transactionManager" />
	     <property name="target" ref="NRIPassUp" />
	     <property name="transactionAttributes" >
	       <props>
	           <prop key="get*">PROPAGATION_REQUIRED,readOnly</prop>
	           <prop key="update*">PROPAGATION_REQUIRED</prop>
	       </props>
	    </property>
 	</bean>
    
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
		<property name="driverClass" value="${jdbc.driverClassName}"/>
        <property name="jdbcUrl" value="${jdbc.url}"/>
        <property name="user" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
		<property name="acquireIncrement" value="10" />
		<property name="acquireRetryAttempts" value="100" />
		<property name="acquireRetryDelay" value="1000" />
		<property name="autoCommitOnClose" value="false" />
		<property name="breakAfterAcquireFailure" value="false"/>
		<property name="checkoutTimeout" value="0" />
        <property name="initialPoolSize" value="${jdbc.initialSize}" />
        <property name="maxIdleTime" value="${jdbc.maxIdleTime}" />
        <property name="maxPoolSize" value="${jdbc.maxPoolSize}" />
        <property name="maxStatements" value="${jdbc.maxStatements}" />
        <property name="maxStatementsPerConnection" value="${jdbc.maxStatementsPerConnection}" />
        <property name="numHelperThreads" value="${jdbc.numHelperThreads}" />
		<property name="propertyCycle" value="${jdbc.propertyCycle}" />
		
	</bean>
	<!-- End of BCNeS code modification on may 21,2010 -->
    <!-- LobHandler for well-behaved JDBC drivers -->
    <!-- (simply delegating to corresponding PreparedStatement and ResultSet methods) -->
    <bean id="defaultLobHandler" class="org.springframework.jdbc.support.lob.DefaultLobHandler" lazy-init="true"/>

    <!-- Hibernate SessionFactory -->
    <bean id="sessionFactory"  class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="mappingLocations">
            <list>
                <value>classpath:hibernate-mappings/rangdelife.hbm.xml</value>
            </list>
        </property>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">${hibernate.dialect}</prop>
                <prop key="hibernate.cache.use_query_cache">${hibernate.cache.use_query_cache}</prop>
                <prop key="hibernate.show_sql">false</prop>
                <prop key="hibernate.format_sql">true</prop>
                <prop key="hibernate.generate_statistics">true</prop>
            </props>
        </property>
        <property name="eventListeners">
            <map>
                <entry key="merge">
                    <bean class="org.springframework.orm.hibernate3.support.IdTransferringMergeEventListener"/>
                </entry>
            </map>
        </property>
        <property name="lobHandler" ref="defaultLobHandler"/>
    </bean>

    <!-- Transaction manager for a single Hibernate SessionFactory (alternative to JTA) -->
	
    <bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

	<bean id="rangDeServiceTarget" class="org.rangdelife.discoverpatients.db.service.impl.HibernateDiscoverPatientsService">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <bean id="rangDeService" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
        <property name="transactionManager" ref="transactionManager"/>
        <property name="target" ref="rangDeServiceTarget"/>
        <property name="transactionAttributes">
            <props>
                <prop key="get*">PROPAGATION_REQUIRED,readOnly</prop>
                <prop key="update*">PROPAGATION_REQUIRED</prop>
            </props>
        </property>
    </bean>
    
</beans>